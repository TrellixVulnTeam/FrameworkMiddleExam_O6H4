{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\middle-exam\\\\src\\\\components\\\\Product.js\";\nimport React, { Component } from 'react';\nimport util from '../util';\nimport Cart from '../components/Cart';\nimport PostProduct from '../components/PostProduct';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleIncrement = () => {\n      this.setState({\n        qty: this.state.insertProduct.total_qty += 1\n      });\n\n      if (this.state.insertProduct.total_qty >= this.props.stock) {\n        this.setState({\n          qty: this.state.insertProduct.total_qty = this.props.stock\n        });\n      }\n\n      this.handleTotal();\n    };\n\n    this.handleTotal = () => {\n      this.setState({\n        totalPrice: this.state.insertProduct.total_price = this.props.price * this.state.insertProduct.total_qty,\n        id: this.state.insertProduct[\"id\"] = new Date().getTime()\n      });\n    };\n\n    this.handleDecrement = () => {\n      this.setState({\n        qty: this.state.insertProduct.total_qty -= 1\n      });\n\n      if (this.state.insertProduct.total_qty <= 0) {\n        this.setState({\n          qty: this.state.insertProduct.total_qty = 0\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        total_qty: this.state.insertProduct[\"total_qty\"] = event.target.value\n      });\n      this.handleTotal();\n    };\n\n    this.handleSave = () => {\n      if (this.state.insertProduct.total_qty <= 0) {\n        alert(\"Minimum order is 1\");\n        this.handleDecrement();\n      } else if (this.state.insertProduct.total_qty > this.props.stock) {\n        alert(\"Your Order Exceeds Existing Stock\");\n        this.handleIncrement();\n      } else if (this.state.insertProduct.total_qty != 0 && this.state.insertProduct.total_qty <= this.props.stock) {\n        fetch(\"http://localhost:3002/cart\", {\n          method: \"post\",\n          headers: {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(this.state.insertProduct)\n        }).then(response => {\n          if (response.ok) {\n            alert(\"Product Was Added Successfully To Cart\");\n            this.setState({\n              total_qty: this.state.insertProduct[\"total_qty\"] = 0\n            });\n            this.handleTotal();\n            return response.json();\n          } else {\n            alert(response.statusText);\n          }\n        });\n      }\n    };\n\n    this.state = {\n      products: [],\n      cartItems: [],\n      insertProduct: {\n        userID: props.id,\n        id: 1,\n        nama: this.props.nama,\n        price: this.props.price,\n        total_qty: 0,\n        total_price: 0\n      }\n    };\n  }\n\n  componentWillMount() {\n    fetch(\"http://localhost:3001/products\").then(res => res.json()).then(data => this.setState({\n      products: data\n    }));\n  }\n\n  render() {\n    const productItems = this.state.products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-image-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"single-products\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"productinfo text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: `#${product.id}`,\n              onClick: this.state.handleAddToCart,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `/products/${product.img}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: util.formatCurrency(product.price)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", product.nama, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Total Order: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button_decrement\",\n                onClick: this.handleDecrement,\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 101\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this), \"\\u2003\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"total_qty\",\n                name: \"total_qty\",\n                value: this.state.insertProduct.total_qty,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this), \"\\u2003\", /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button_increment\",\n                onClick: this.handleIncrement,\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 101\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Total Price: IDR \", this.state.insertProduct.total_price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                type: \"submit\",\n                onClick: this.handleSave,\n                children: \"Add to Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"features_items\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"title text-center\",\n                  children: \"Features Items\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 37\n                }, this), productItems]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Product;","map":{"version":3,"sources":["C:/react/middle-exam/src/components/Product.js"],"names":["React","Component","util","Cart","PostProduct","Product","constructor","props","handleIncrement","setState","qty","state","insertProduct","total_qty","stock","handleTotal","totalPrice","total_price","price","id","Date","getTime","handleDecrement","handleChange","event","target","value","handleSave","alert","fetch","method","headers","body","JSON","stringify","then","response","ok","json","statusText","products","cartItems","userID","nama","componentWillMount","res","data","render","productItems","map","product","handleAddToCart","img","formatCurrency"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport util from '../util';\r\nimport Cart from '../components/Cart';\r\nimport PostProduct from '../components/PostProduct';\r\n\r\nclass Product extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            products: [], \r\n            cartItems: [],\r\n            insertProduct: {\r\n                userID: props.id,\r\n                id: 1,\r\n                nama: this.props.nama,\r\n                price: this.props.price,\r\n                total_qty: 0,\r\n                total_price: 0\r\n            }\r\n        };\r\n      }\r\n      componentWillMount(){\r\n        fetch(\"http://localhost:3001/products\").then(res => res.json())\r\n        .then(data => this.setState({\r\n          products: data,\r\n        }));\r\n      }\r\n      handleIncrement = () => {\r\n        this.setState({\r\n            qty: this.state.insertProduct.total_qty += 1,\r\n        })\r\n        if (this.state.insertProduct.total_qty >= this.props.stock){\r\n            this.setState({\r\n                qty: this.state.insertProduct.total_qty = this.props.stock\r\n            })\r\n        }\r\n        this.handleTotal()\r\n    }\r\n    handleTotal = () => {\r\n        this.setState({\r\n            totalPrice: this.state.insertProduct.total_price = \r\n            this.props.price * this.state.insertProduct.total_qty,\r\n            id: this.state.insertProduct[\"id\"] = new Date().getTime()\r\n        })\r\n    }\r\n    handleDecrement = () => {\r\n        this.setState({\r\n            qty: this.state.insertProduct.total_qty -= 1,\r\n        })\r\n        if (this.state.insertProduct.total_qty <= 0) {\r\n            this.setState({\r\n                qty: this.state.insertProduct.total_qty = 0\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            total_qty: this.state.insertProduct[\"total_qty\"] = event.target.value,\r\n        })\r\n        this.handleTotal()\r\n    }\r\n\r\n    handleSave = () => {\r\n        if (this.state.insertProduct.total_qty <= 0){\r\n            alert(\"Minimum order is 1\");\r\n            this.handleDecrement()\r\n        } else if (this.state.insertProduct.total_qty > this.props.stock){\r\n            alert(\"Your Order Exceeds Existing Stock\");\r\n            this.handleIncrement()\r\n        } else if (this.state.insertProduct.total_qty != 0 && this.state.insertProduct.total_qty <= this.props.stock){\r\n            fetch(\"http://localhost:3002/cart\", {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(this.state.insertProduct)\r\n            }).then(response => {\r\n                if (response.ok) {\r\n                    alert(\"Product Was Added Successfully To Cart\")\r\n                    this.setState({\r\n                        total_qty: this.state.insertProduct[\"total_qty\"] = 0\r\n                    })\r\n                    this.handleTotal()\r\n                    return response.json()\r\n                } else {\r\n                    alert(response.statusText)\r\n                }\r\n            })\r\n        }\r\n    }\r\n    render(){\r\n        const productItems = this.state.products.map(product => (\r\n            <div className=\"col-md-4\" key={product.id}>\r\n                <div className=\"product-image-wrapper\">\r\n                    <div className=\"single-products\">\r\n                        <div className=\"productinfo text-center\">\r\n                            <a\r\n                                href={`#${product.id}`}\r\n                                onClick={this.state.handleAddToCart}>\r\n                            <img src={`/products/${product.img}`} />\r\n                            <h2>{util.formatCurrency(product.price)}</h2>\r\n                            <p> {product.nama} </p>\r\n                            </a>\r\n                            \r\n                            <div className=\"order\">\r\n                                <p>Total Order: </p>\r\n                                <button className=\"button_decrement\" onClick={this.handleDecrement}><b>-</b></button>&emsp;\r\n                                <input type=\"text\" id=\"total_qty\" name=\"total_qty\" \r\n                                value={this.state.insertProduct.total_qty} onChange={this.handleChange}></input>&emsp;\r\n                                <button className=\"button_increment\" onClick={this.handleIncrement}><b>+</b></button>\r\n                                <p>Total Price: IDR {this.state.insertProduct.total_price}</p> \r\n                                <button className=\"btn btn-primary\" type=\"submit\" onClick={this.handleSave}>Add to Cart</button>\r\n                            </div><br></br>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ))\r\n        return(\r\n            <div>\r\n                <section>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-12\">\r\n                                <div className=\"features_items\">\r\n                                    <h2 className=\"title text-center\">Features Items</h2>\r\n                                    {productItems}\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n} export default Product"]},"metadata":{},"sourceType":"module"}