{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\middle-exam\\\\src\\\\components\\\\Product.js\";\nimport React, { Component } from 'react';\nimport util from '../util';\nimport Cart from '../components/Cart';\nimport PostProduct from '../components/PostProduct';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      cartItems: [],\n      insertProduct: {\n        userID: props.id,\n        id: 1,\n        nama: this.props.nama,\n        price: this.props.price,\n        total_qty: 0,\n        total_price: 0\n      }\n    };\n  }\n\n  componentWillMount() {\n    fetch(\"http://localhost:3001/products\").then(res => res.json()).then(data => this.setState({\n      products: data\n    }));\n  } //   handleIncrement = () => {\n  //     this.setState({\n  //         qty: this.state.insertProduct.total_qty += 1,\n  //     })\n  //     if (this.state.insertProduct.total_qty >= this.props.stock){\n  //         this.setState({\n  //             qty: this.state.insertProduct.total_qty = this.props.stock\n  //         })\n  //     }\n  //     this.handleTotal()\n  // }\n  // handleTotal = () => {\n  //     this.setState({\n  //         totalPrice: this.state.insertProduct.total_price = \n  //         this.props.price * this.state.insertProduct.total_qty,\n  //         id: this.state.insertProduct[\"id\"] = new Date().getTime()\n  //     })\n  // }\n  // handleDecrement = () => {\n  //     this.setState({\n  //         qty: this.state.insertProduct.total_qty -= 1,\n  //     })\n  //     if (this.state.insertProduct.total_qty <= 0) {\n  //         this.setState({\n  //             qty: this.state.insertProduct.total_qty = 0\n  //         })\n  //     }\n  // }\n  // handleChange = (event) => {\n  //     this.setState({\n  //         total_qty: this.state.insertProduct[\"total_qty\"] = event.target.value,\n  //     })\n  //     this.handleTotal()\n  // }\n  // handleSave = () => {\n  //     if (this.state.insertProduct.total_qty <= 0){\n  //         alert(\"Minimum order is 1\");\n  //         this.handleDecrement()\n  //     } else if (this.state.insertProduct.total_qty > this.props.stock){\n  //         alert(\"Your Order Exceeds Existing Stock\");\n  //         this.handleIncrement()\n  //     } else if (this.state.insertProduct.total_qty != 0 && this.state.insertProduct.total_qty <= this.props.stock){\n  //         fetch(\"http://localhost:3002/cart\", {\n  //             method: \"post\",\n  //             headers: {\n  //                 \"Accept\": \"application/json\",\n  //                 \"Content-Type\": \"application/json\"\n  //             },\n  //             body: JSON.stringify(this.state.insertProduct)\n  //         }).then(response => {\n  //             if (response.ok) {\n  //                 alert(\"Product Was Added Successfully To Cart\")\n  //                 this.setState({\n  //                     total_qty: this.state.insertProduct[\"total_qty\"] = 0\n  //                 })\n  //                 this.handleTotal()\n  //                 return response.json()\n  //             } else {\n  //                 alert(response.statusText)\n  //             }\n  //         })\n  //     }\n  // }\n\n\n  render() {\n    const productItems = this.state.products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-image-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"single-products\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"productinfo text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `#${product.id}`,\n              onClick: this.state.handleAddToCart,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `/products/${product.img}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: util.formatCurrency(product.price)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", product.nama, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"features_items\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"title text-center\",\n                  children: \"Features Items\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 37\n                }, this), productItems]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Product;","map":{"version":3,"sources":["C:/react/middle-exam/src/components/Product.js"],"names":["React","Component","util","Cart","PostProduct","Product","constructor","props","state","products","cartItems","insertProduct","userID","id","nama","price","total_qty","total_price","componentWillMount","fetch","then","res","json","data","setState","render","productItems","map","product","handleAddToCart","img","formatCurrency"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport util from '../util';\r\nimport Cart from '../components/Cart';\r\nimport PostProduct from '../components/PostProduct';\r\n\r\nclass Product extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            products: [], \r\n            cartItems: [],\r\n            insertProduct: {\r\n                userID: props.id,\r\n                id: 1,\r\n                nama: this.props.nama,\r\n                price: this.props.price,\r\n                total_qty: 0,\r\n                total_price: 0\r\n            }\r\n        };\r\n      }\r\n      componentWillMount(){\r\n        fetch(\"http://localhost:3001/products\").then(res => res.json())\r\n        .then(data => this.setState({\r\n          products: data,\r\n        }));\r\n      }\r\n    //   handleIncrement = () => {\r\n    //     this.setState({\r\n    //         qty: this.state.insertProduct.total_qty += 1,\r\n    //     })\r\n    //     if (this.state.insertProduct.total_qty >= this.props.stock){\r\n    //         this.setState({\r\n    //             qty: this.state.insertProduct.total_qty = this.props.stock\r\n    //         })\r\n    //     }\r\n    //     this.handleTotal()\r\n    // }\r\n    // handleTotal = () => {\r\n    //     this.setState({\r\n    //         totalPrice: this.state.insertProduct.total_price = \r\n    //         this.props.price * this.state.insertProduct.total_qty,\r\n    //         id: this.state.insertProduct[\"id\"] = new Date().getTime()\r\n    //     })\r\n    // }\r\n    // handleDecrement = () => {\r\n    //     this.setState({\r\n    //         qty: this.state.insertProduct.total_qty -= 1,\r\n    //     })\r\n    //     if (this.state.insertProduct.total_qty <= 0) {\r\n    //         this.setState({\r\n    //             qty: this.state.insertProduct.total_qty = 0\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    // handleChange = (event) => {\r\n    //     this.setState({\r\n    //         total_qty: this.state.insertProduct[\"total_qty\"] = event.target.value,\r\n    //     })\r\n    //     this.handleTotal()\r\n    // }\r\n\r\n    // handleSave = () => {\r\n    //     if (this.state.insertProduct.total_qty <= 0){\r\n    //         alert(\"Minimum order is 1\");\r\n    //         this.handleDecrement()\r\n    //     } else if (this.state.insertProduct.total_qty > this.props.stock){\r\n    //         alert(\"Your Order Exceeds Existing Stock\");\r\n    //         this.handleIncrement()\r\n    //     } else if (this.state.insertProduct.total_qty != 0 && this.state.insertProduct.total_qty <= this.props.stock){\r\n    //         fetch(\"http://localhost:3002/cart\", {\r\n    //             method: \"post\",\r\n    //             headers: {\r\n    //                 \"Accept\": \"application/json\",\r\n    //                 \"Content-Type\": \"application/json\"\r\n    //             },\r\n    //             body: JSON.stringify(this.state.insertProduct)\r\n    //         }).then(response => {\r\n    //             if (response.ok) {\r\n    //                 alert(\"Product Was Added Successfully To Cart\")\r\n    //                 this.setState({\r\n    //                     total_qty: this.state.insertProduct[\"total_qty\"] = 0\r\n    //                 })\r\n    //                 this.handleTotal()\r\n    //                 return response.json()\r\n    //             } else {\r\n    //                 alert(response.statusText)\r\n    //             }\r\n    //         })\r\n    //     }\r\n    // }\r\n    render(){\r\n        const productItems = this.state.products.map(product => (\r\n            <div className=\"col-md-4\" key={product.id}>\r\n                <div className=\"product-image-wrapper\">\r\n                    <div className=\"single-products\">\r\n                        <div className=\"productinfo text-center\">\r\n                            <a\r\n                                href={`#${product.id}`}\r\n                                onClick={this.state.handleAddToCart}>\r\n                            <img src={`/products/${product.img}`} />\r\n                            <h2>{util.formatCurrency(product.price)}</h2>\r\n                            <p> {product.nama} </p>\r\n                            </a>\r\n                            \r\n                            {/* <div className=\"order\">\r\n                                <p>Total Order: </p>\r\n                                <button className=\"button_decrement\" onClick={this.handleDecrement}><b>-</b></button>&emsp;\r\n                                <input type=\"text\" id=\"total_qty\" name=\"total_qty\" \r\n                                value={this.state.insertProduct.total_qty} onChange={this.handleChange}></input>&emsp;\r\n                                <button className=\"button_increment\" onClick={this.handleIncrement}><b>+</b></button>\r\n                                <p>Total Price: IDR {this.state.insertProduct.total_price}</p> \r\n                                <button className=\"btn btn-primary\" type=\"submit\" onClick={this.handleSave}>Add to Cart</button>\r\n                            </div><br></br> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ))\r\n        return(\r\n            <div>\r\n                <section>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-12\">\r\n                                <div className=\"features_items\">\r\n                                    <h2 className=\"title text-center\">Features Items</h2>\r\n                                    {productItems}\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n} export default Product"]},"metadata":{},"sourceType":"module"}