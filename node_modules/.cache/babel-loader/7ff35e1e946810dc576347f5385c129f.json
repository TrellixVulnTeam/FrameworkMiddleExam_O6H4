{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\middle-exam\\\\src\\\\components\\\\PostProduct.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PostProduct extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleIncrement = () => {\n      this.setState({\n        qty: this.state.insertProduct.total_qty += 1\n      });\n\n      if (this.state.insertProduct.total_qty >= this.props.stock) {\n        this.setState({\n          qty: this.state.insertProduct.total_qty = this.props.stock\n        });\n      }\n\n      this.handleTotal();\n    };\n\n    this.handleTotal = () => {\n      this.setState({\n        totalPrice: this.state.insertProduct.total_price = this.props.price * this.state.insertProduct.total_qty,\n        id: this.state.insertProduct[\"id\"] = new Date().getTime()\n      });\n    };\n\n    this.handleDecrement = () => {\n      this.setState({\n        qty: this.state.insertProduct.total_qty -= 1\n      });\n\n      if (this.state.insertProduct.total_qty <= 0) {\n        this.setState({\n          qty: this.state.insertProduct.total_qty = 0\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        total_qty: this.state.insertProduct[\"total_qty\"] = event.target.value\n      });\n      this.handleTotal();\n    };\n\n    this.handleSave = () => {\n      if (this.state.insertProduct.total_qty <= 0) {\n        alert(\"Minimum order is 1\");\n        this.handleDecrement();\n      } else if (this.state.insertProduct.total_qty > this.props.stock) {\n        alert(\"Your Order Exceeds Existing Stock\");\n        this.handleIncrement();\n      } else if (this.state.insertProduct.total_qty != 0 && this.state.insertProduct.total_qty <= this.props.stock) {\n        fetch(\"http://localhost:3002/cart\", {\n          method: \"post\",\n          headers: {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(this.state.insertProduct)\n        }).then(response => {\n          if (response.ok) {\n            alert(\"Product Was Added Successfully To Cart\");\n            this.setState({\n              total_qty: this.state.insertProduct[\"total_qty\"] = 0\n            });\n            this.handleTotal();\n            return response.json();\n          } else {\n            alert(response.statusText);\n          }\n        });\n      }\n    };\n\n    this.state = {\n      products: [],\n      cartItems: [],\n      insertProduct: {\n        userID: props.id,\n        id: 1,\n        nama: this.props.nama,\n        price: this.props.price,\n        total_qty: 0,\n        total_price: 0\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Total Order: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button_decrement\",\n          onClick: this.handleDecrement,\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 101\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 33\n        }, this), \"\\u2003\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"total_qty\",\n          name: \"total_qty\",\n          value: this.state.insertProduct.total_qty,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 33\n        }, this), \"\\u2003\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button_increment\",\n          onClick: this.handleIncrement,\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 101\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Price: IDR \", this.state.insertProduct.total_price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          onClick: this.handleSave,\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/react/middle-exam/src/components/PostProduct.js"],"names":["React","Component","PostProduct","constructor","props","handleIncrement","setState","qty","state","insertProduct","total_qty","stock","handleTotal","totalPrice","total_price","price","id","Date","getTime","handleDecrement","handleChange","event","target","value","handleSave","alert","fetch","method","headers","body","JSON","stringify","then","response","ok","json","statusText","products","cartItems","userID","nama","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class PostProduct extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            products: [], \r\n            cartItems: [],\r\n            insertProduct: {\r\n                userID: props.id,\r\n                id: 1,\r\n                nama: this.props.nama,\r\n                price: this.props.price,\r\n                total_qty: 0,\r\n                total_price: 0\r\n            }\r\n        };\r\n    }\r\n\r\n    handleIncrement = () => {\r\n        this.setState({\r\n            qty: this.state.insertProduct.total_qty += 1,\r\n        })\r\n        if (this.state.insertProduct.total_qty >= this.props.stock){\r\n            this.setState({\r\n                qty: this.state.insertProduct.total_qty = this.props.stock\r\n            })\r\n        }\r\n        this.handleTotal()\r\n    }\r\n\r\n    handleTotal = () => {\r\n        this.setState({\r\n            totalPrice: this.state.insertProduct.total_price = \r\n            this.props.price * this.state.insertProduct.total_qty,\r\n            id: this.state.insertProduct[\"id\"] = new Date().getTime()\r\n        })\r\n    }\r\n    handleDecrement = () => {\r\n        this.setState({\r\n            qty: this.state.insertProduct.total_qty -= 1,\r\n        })\r\n        if (this.state.insertProduct.total_qty <= 0) {\r\n            this.setState({\r\n                qty: this.state.insertProduct.total_qty = 0\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            total_qty: this.state.insertProduct[\"total_qty\"] = event.target.value,\r\n        })\r\n        this.handleTotal()\r\n    }\r\n\r\n    handleSave = () => {\r\n        if (this.state.insertProduct.total_qty <= 0){\r\n            alert(\"Minimum order is 1\");\r\n            this.handleDecrement()\r\n        } else if (this.state.insertProduct.total_qty > this.props.stock){\r\n            alert(\"Your Order Exceeds Existing Stock\");\r\n            this.handleIncrement()\r\n        } else if (this.state.insertProduct.total_qty != 0 && this.state.insertProduct.total_qty <= this.props.stock){\r\n            fetch(\"http://localhost:3002/cart\", {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(this.state.insertProduct)\r\n            }).then(response => {\r\n                if (response.ok) {\r\n                    alert(\"Product Was Added Successfully To Cart\")\r\n                    this.setState({\r\n                        total_qty: this.state.insertProduct[\"total_qty\"] = 0\r\n                    })\r\n                    this.handleTotal()\r\n                    return response.json()\r\n                } else {\r\n                    alert(response.statusText)\r\n                }\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"order\">\r\n                                <p>Total Order: </p>\r\n                                <button className=\"button_decrement\" onClick={this.handleDecrement}><b>-</b></button>&emsp;\r\n                                <input type=\"text\" id=\"total_qty\" name=\"total_qty\" \r\n                                value={this.state.insertProduct.total_qty} onChange={this.handleChange}></input>&emsp;\r\n                                <button className=\"button_increment\" onClick={this.handleIncrement}><b>+</b></button>\r\n                                <p>Total Price: IDR {this.state.insertProduct.total_price}</p> \r\n                                <button className=\"btn btn-primary\" type=\"submit\" onClick={this.handleSave}>Add to Cart</button>\r\n                            </div><br></br>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}